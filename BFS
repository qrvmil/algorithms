#include <iostream>
#include <vector>
#include<algorithm>
#include <unordered_set>
#include <utility>
#include <stack>
#include<queue>

using namespace std;

int n;
vector <long long> w;
vector<long long> tree;





int main() {

	int n, m; cin >> n >> m;
	vector <vector<int>> arr(n);
	for (int i = 0; i < m; ++i) {
		int v, u; cin >> v >> u;
		arr[v - 1].push_back(u - 1);
	}
	vector <int> dist(n, -1);
	dist[0] = 0;
	queue <int> ver;
	ver.push(0);

	while (!ver.empty()) {
		int cur = ver.front();
		ver.pop();
		for (auto elem : arr[cur]) {
			if (dist[elem] == -1) {
				dist[elem] = dist[cur] + 1;
				ver.push(elem);
			}
		}
	}

	for (auto x : dist) {
		cout << x << ' ';
	}

	
}
